---
import getBreadcrumbs from "@utils/getBreadcrumbs";

// Remove current url path and remove trailing slash if exists
const currentUrlPath = Astro.url.pathname.replace(/\/+$/, "");

const breadcrumbList = getBreadcrumbs(currentUrlPath);

export interface Props {
  title?: string;
}

const { title = "" } = Astro.props;
---

<nav class="breadcrumb" aria-label="breadcrumb">
  <ul>
    <li>
      <a href="/">Home</a>
      <span aria-hidden="true">&#62;</span>
    </li>
    {
      breadcrumbList.map((breadcrumb, index) => {
        const isLast = index + 1 === breadcrumbList.length;

        return (
          <li>
            <a
              href={isLast ? currentUrlPath : `/${breadcrumb}`}
              class={!isLast || !title ? "capitalize" : ""}
            >
              {isLast ? title || breadcrumb : breadcrumb}
            </a>
            {!isLast && <span aria-hidden="true">&#62;</span>}
          </li>
        );
      })
    }
  </ul>
</nav>

<style>
  .breadcrumb {
    @apply mx-auto mt-8 mb-1 w-full max-w-3xl px-4;
  }
  .breadcrumb ul li {
    @apply inline;
  }
  .breadcrumb ul li a {
    @apply opacity-70 hover:opacity-100;
  }
  .breadcrumb ul li span {
    @apply opacity-70;
  }
</style>
